{"version":3,"sources":["webpack:///./index.js"],"names":["regBtn","document","querySelector","modal","addEventListener","e","preventDefault","classList","add","selector","this","form","logInInput","elements","logIn","passInput","password","passwordRepeatInput","passwordRepeat","okBtn","togglePassBth","querySelectorAll","handleChange","h_selector","loginDescr","passDescr","secondPassDescr","checkSecondPass","firstPass","secondPass","remove","target","name","value","match","checkPass","contains","disabled","handleOk","alert","show_hide_password","input","getAttribute","setAttribute","addListeners","forEach","btn"],"mappings":"2LAGMA,EAASC,SAASC,cAAc,WAChCC,EAAQF,SAASC,cAAc,UAOrCF,EAAOI,iBAAiB,SALN,SAAAC,GAChBA,EAAEC,iBACFH,EAAMI,UAAUC,IAAI,cA0HP,I,WApHb,WAAYC,GACVC,KAAKD,SAAWA,EAChBC,KAAKC,KAAOV,SAASC,cAAT,GAA0BO,GACtCC,KAAKE,WAAaF,KAAKC,KAAKE,SAASC,MACrCJ,KAAKK,UAAYL,KAAKC,KAAKE,SAASG,SACpCN,KAAKO,oBAAsBP,KAAKC,KAAKE,SAASK,eAC9CR,KAAKS,MAAQT,KAAKC,KAAKE,SAASM,MAChCT,KAAKU,cAAgBnB,SAASoB,iBACzBZ,EADgB,sB,2BAKvBa,aAAA,SAAajB,EAAGkB,GACd,IAAMZ,EAAOV,SAASC,cAAT,GAA0BqB,GACjCR,EAAYJ,EAAKE,SAASG,SAC1BC,EAAsBN,EAAKE,SAASK,eACpCC,EAAQR,EAAKE,SAASM,MACtBK,EAAavB,SAASC,cAAiBqB,EAA1B,gBACbE,EAAYxB,SAASC,cAAiBqB,EAA1B,eACZG,EAAkBzB,SAASC,cAC5BqB,EADmB,qBAuBlBI,EAAkB,SAACC,EAAWC,GAC9BD,IAAcC,GAChBH,EAAgBnB,UAAUuB,OAAO,WACjCJ,EAAgBnB,UAAUC,IAAI,WAE9BkB,EAAgBnB,UAAUuB,OAAO,SACjCJ,EAAgBnB,UAAUC,IAAI,aAgBlC,OAAQH,EAAE0B,OAAOC,MACf,IAAK,QACQ3B,EAAE0B,OAAOE,MA3CZC,MAAM,iCACdV,EAAWjB,UAAUuB,OAAO,WAC5BN,EAAWjB,UAAUC,IAAI,WAEzBgB,EAAWjB,UAAUuB,OAAO,SAC5BN,EAAWjB,UAAUC,IAAI,YAuCzB,MACF,IAAK,YApCW,SAAAyB,GACZA,EAAMC,MAAM,8CACdT,EAAUlB,UAAUuB,OAAO,WAC3BL,EAAUlB,UAAUC,IAAI,WAExBiB,EAAUlB,UAAUuB,OAAO,SAC3BL,EAAUlB,UAAUC,IAAI,YA+BxB2B,CAAU9B,EAAE0B,OAAOE,OACnBN,EAAgBV,EAAoBgB,MAAOlB,EAAUkB,OACrD,MACF,IAAK,iBACHN,EAAgBtB,EAAE0B,OAAOE,MAAOlB,EAAUkB,OAnB1CT,EAAWjB,UAAU6B,SAAS,UAC9BX,EAAUlB,UAAU6B,SAAS,UAC7BV,EAAgBnB,UAAU6B,SAAS,SAEnCjB,EAAMkB,UAAW,EAEjBlB,EAAMkB,UAAW,G,EAqBvBC,SAAA,SAASjC,GACPA,EAAEC,iBACFiC,MAAM,c,EAGRC,mBAAA,YAA+B,IAAVT,EAAU,EAAVA,OACfU,EAAQxC,SAASC,cAAT,IAA2B6B,EAAOC,MAEX,aAA/BS,EAAMC,aAAa,SACrBX,EAAOxB,UAAUC,IAAI,QACrBiC,EAAME,aAAa,OAAQ,UAE3BZ,EAAOxB,UAAUuB,OAAO,QACxBW,EAAME,aAAa,OAAQ,c,EAI/BC,aAAA,WAAe,WACblC,KAAKS,MAAMkB,UAAW,EACtB3B,KAAKE,WAAWR,iBAAiB,SAAS,SAAAC,GAAC,OACzC,EAAKiB,aAAajB,EAAG,EAAKI,aAE5BC,KAAKK,UAAUX,iBAAiB,SAAS,SAAAC,GAAC,OACxC,EAAKiB,aAAajB,EAAG,EAAKI,aAE5BC,KAAKO,oBAAoBb,iBAAiB,SAAS,SAAAC,GAAC,OAClD,EAAKiB,aAAajB,EAAG,EAAKI,aAE5BC,KAAKU,cAAcyB,SAAQ,SAAAC,GAAG,OAC5BA,EAAI1C,iBAAiB,QAAS,EAAKoC,uBAErC9B,KAAKS,MAAMf,iBAAiB,QAASM,KAAK4B,W,KAI/B,CAAS,gBACjBM,iB","file":"main.3652115004feb635620f.js","sourcesContent":["import './styles.scss';\nimport { validation, unvalidation } from './validators';\n\nconst regBtn = document.querySelector('.regBtn');\nconst modal = document.querySelector('.modal');\n\nconst openModal = e => {\n  e.preventDefault();\n  modal.classList.add('is-open');\n};\n\nregBtn.addEventListener('click', openModal);\n\nclass Form {\n  constructor(selector) {\n    this.selector = selector;\n    this.form = document.querySelector(`${selector}`);\n    this.logInInput = this.form.elements.logIn;\n    this.passInput = this.form.elements.password;\n    this.passwordRepeatInput = this.form.elements.passwordRepeat;\n    this.okBtn = this.form.elements.okBtn;\n    this.togglePassBth = document.querySelectorAll(\n      `${selector}--password-control`,\n    );\n  }\n\n  handleChange(e, h_selector) {\n    const form = document.querySelector(`${h_selector}`);\n    const passInput = form.elements.password;\n    const passwordRepeatInput = form.elements.passwordRepeat;\n    const okBtn = form.elements.okBtn;\n    const loginDescr = document.querySelector(`${h_selector}--loginDescr`);\n    const passDescr = document.querySelector(`${h_selector}--passDescr`);\n    const secondPassDescr = document.querySelector(\n      `${h_selector}--secondPassDescr`,\n    );\n    const checkLogin = value => {\n      if (value.match(/^[a-zA-Z][a-zA-Z0-9\\.]{4,9}$/)) {\n        loginDescr.classList.remove('invalid');\n        loginDescr.classList.add('valid');\n      } else {\n        loginDescr.classList.remove('valid');\n        loginDescr.classList.add('invalid');\n      }\n    };\n\n    const checkPass = value => {\n      if (value.match(/(?=.*\\d)(?=.*[a-zа-я])(?=.*[A-Zа-я]).{8,}/)) {\n        passDescr.classList.remove('invalid');\n        passDescr.classList.add('valid');\n      } else {\n        passDescr.classList.remove('valid');\n        passDescr.classList.add('invalid');\n      }\n    };\n\n    const checkSecondPass = (firstPass, secondPass) => {\n      if (firstPass === secondPass) {\n        secondPassDescr.classList.remove('invalid');\n        secondPassDescr.classList.add('valid');\n      } else {\n        secondPassDescr.classList.remove('valid');\n        secondPassDescr.classList.add('invalid');\n      }\n    };\n\n    const checkOkBtn = () => {\n      if (\n        loginDescr.classList.contains('valid') &&\n        passDescr.classList.contains('valid') &&\n        secondPassDescr.classList.contains('valid')\n      ) {\n        okBtn.disabled = false;\n      } else {\n        okBtn.disabled = true;\n      }\n    };\n\n    switch (e.target.name) {\n      case 'logIn':\n        checkLogin(e.target.value);\n        break;\n      case 'password':\n        checkPass(e.target.value);\n        checkSecondPass(passwordRepeatInput.value, passInput.value);\n        break;\n      case 'passwordRepeat':\n        checkSecondPass(e.target.value, passInput.value);\n        break;\n      default:\n        break;\n    }\n    checkOkBtn();\n  }\n\n  handleOk(e) {\n    e.preventDefault();\n    alert('ТАДААААМ!');\n  }\n\n  show_hide_password({ target }) {\n    let input = document.querySelector(`.${target.name}`);\n\n    if (input.getAttribute('type') === 'password') {\n      target.classList.add('view');\n      input.setAttribute('type', 'text');\n    } else {\n      target.classList.remove('view');\n      input.setAttribute('type', 'password');\n    }\n  }\n\n  addListeners() {\n    this.okBtn.disabled = true;\n    this.logInInput.addEventListener('input', e =>\n      this.handleChange(e, this.selector),\n    );\n    this.passInput.addEventListener('input', e =>\n      this.handleChange(e, this.selector),\n    );\n    this.passwordRepeatInput.addEventListener('input', e =>\n      this.handleChange(e, this.selector),\n    );\n    this.togglePassBth.forEach(btn =>\n      btn.addEventListener('click', this.show_hide_password),\n    );\n    this.okBtn.addEventListener('click', this.handleOk);\n  }\n}\n\nconst myForm = new Form('.modal__form');\nmyForm.addListeners();\n"],"sourceRoot":""}