{"version":3,"sources":["webpack:///./index.js"],"names":["regBtn","document","querySelector","modal","addEventListener","e","preventDefault","classList","add","selector","value","match","loginDescr","remove","passDescr","firstPass","secondPass","secondPassDescr","contains","okBtn","disabled","this","form","logInInput","elements","logIn","passInput","password","passwordRepeatInput","passwordRepeat","togglePassBth","querySelectorAll","handleChange","h_selector","target","name","checkLogin","checkPass","checkSecondPass","checkOkBtn","handleOk","alert","show_hide_password","input","getAttribute","setAttribute","addListeners","bind","forEach","btn"],"mappings":"+SAEA,IAAMA,EAASC,SAASC,cAAc,WAChCC,EAAQF,SAASC,cAAc,UAOrCF,EAAOI,iBAAiB,SALN,SAAAC,GAChBA,EAAEC,iBACFH,EAAMI,UAAUC,IAAI,cAsHP,I,WAhHb,WAAYC,GAAU,gCAiBT,SAAAC,GACPA,EAAMC,MAAM,iCACd,EAAKC,WAAWL,UAAUM,OAAO,WACjC,EAAKD,WAAWL,UAAUC,IAAI,WAE9B,EAAKI,WAAWL,UAAUM,OAAO,SACjC,EAAKD,WAAWL,UAAUC,IAAI,eAvBZ,oBA2BV,SAAAE,GACNA,EAAMC,MAAM,8CACd,EAAKG,UAAUP,UAAUM,OAAO,WAChC,EAAKC,UAAUP,UAAUC,IAAI,WAE7B,EAAKM,UAAUP,UAAUM,OAAO,SAChC,EAAKC,UAAUP,UAAUC,IAAI,eAjCX,0BAqCJ,SAACO,EAAWC,GACxBD,IAAcC,GAChB,EAAKC,gBAAgBV,UAAUM,OAAO,WACtC,EAAKI,gBAAgBV,UAAUC,IAAI,WAEnC,EAAKS,gBAAgBV,UAAUM,OAAO,SACtC,EAAKI,gBAAgBV,UAAUC,IAAI,eA3CjB,qBA+CT,WAET,EAAKI,WAAWL,UAAUW,SAAS,UACnC,EAAKJ,UAAUP,UAAUW,SAAS,UAClC,EAAKD,gBAAgBV,UAAUW,SAAS,SAExC,EAAKC,MAAMC,UAAW,EAEtB,EAAKD,MAAMC,UAAW,KAtDxBC,KAAKZ,SAAWA,EAChBY,KAAKC,KAAOrB,SAASC,cAAT,GAA0BO,GACtCY,KAAKE,WAAaF,KAAKC,KAAKE,SAASC,MACrCJ,KAAKK,UAAYL,KAAKC,KAAKE,SAASG,SACpCN,KAAKO,oBAAsBP,KAAKC,KAAKE,SAASK,eAC9CR,KAAKF,MAAQE,KAAKC,KAAKE,SAASL,MAChCE,KAAKS,cAAgB7B,SAAS8B,iBACzBtB,EADgB,sBAGrBY,KAAKT,WAAaX,SAASC,cAAiBO,EAA1B,gBAClBY,KAAKP,UAAYb,SAASC,cAAiBO,EAA1B,eACjBY,KAAKJ,gBAAkBhB,SAASC,cAC3BO,EADkB,qB,2BA+CzBuB,aAAA,SAAa3B,EAAG4B,GACd,OAAQ5B,EAAE6B,OAAOC,MACf,IAAK,QACHd,KAAKe,WAAW/B,EAAE6B,OAAOxB,OACzB,MACF,IAAK,WACHW,KAAKgB,UAAUhC,EAAE6B,OAAOxB,OACxBW,KAAKiB,gBACHjB,KAAKO,oBAAoBlB,MACzBW,KAAKK,UAAUhB,OAEjB,MACF,IAAK,iBACHW,KAAKiB,gBAAgBjC,EAAE6B,OAAOxB,MAAOW,KAAKK,UAAUhB,OAKxDW,KAAKkB,c,EAGPC,SAAA,SAASnC,GACPA,EAAEC,iBACFmC,MAAM,c,EAGRC,mBAAA,YAA+B,IAAVR,EAAU,EAAVA,OACfS,EAAQ1C,SAASC,cAAT,IAA2BgC,EAAOC,MAEX,aAA/BQ,EAAMC,aAAa,SACrBV,EAAO3B,UAAUC,IAAI,QACrBmC,EAAME,aAAa,OAAQ,UAE3BX,EAAO3B,UAAUM,OAAO,QACxB8B,EAAME,aAAa,OAAQ,c,EAI/BC,aAAA,WAAe,WACbzB,KAAKF,MAAMC,UAAW,EACtBC,KAAKE,WAAWnB,iBAAiB,QAASiB,KAAKW,aAAae,KAAK1B,OACjEA,KAAKK,UAAUtB,iBAAiB,QAASiB,KAAKW,aAAae,KAAK1B,OAChEA,KAAKO,oBAAoBxB,iBACvB,QACAiB,KAAKW,aAAae,KAAK1B,OAEzBA,KAAKS,cAAckB,SAAQ,SAAAC,GAAG,OAC5BA,EAAI7C,iBAAiB,QAAS,EAAKsC,uBAErCrB,KAAKF,MAAMf,iBAAiB,QAASiB,KAAKmB,W,KAI/B,CAAS,gBACjBM,iB","file":"main.218848ba2dce7eba8901.js","sourcesContent":["import './styles.scss';\n\nconst regBtn = document.querySelector('.regBtn');\nconst modal = document.querySelector('.modal');\n\nconst openModal = e => {\n  e.preventDefault();\n  modal.classList.add('is-open');\n};\n\nregBtn.addEventListener('click', openModal);\n\nclass Form {\n  constructor(selector) {\n    this.selector = selector;\n    this.form = document.querySelector(`${selector}`);\n    this.logInInput = this.form.elements.logIn;\n    this.passInput = this.form.elements.password;\n    this.passwordRepeatInput = this.form.elements.passwordRepeat;\n    this.okBtn = this.form.elements.okBtn;\n    this.togglePassBth = document.querySelectorAll(\n      `${selector}--password-control`,\n    );\n    this.loginDescr = document.querySelector(`${selector}--loginDescr`);\n    this.passDescr = document.querySelector(`${selector}--passDescr`);\n    this.secondPassDescr = document.querySelector(\n      `${selector}--secondPassDescr`,\n    );\n  }\n\n  checkLogin = value => {\n    if (value.match(/^[a-zA-Z][a-zA-Z0-9\\.]{4,9}$/)) {\n      this.loginDescr.classList.remove('invalid');\n      this.loginDescr.classList.add('valid');\n    } else {\n      this.loginDescr.classList.remove('valid');\n      this.loginDescr.classList.add('invalid');\n    }\n  };\n\n  checkPass = value => {\n    if (value.match(/(?=.*\\d)(?=.*[a-zа-я])(?=.*[A-Zа-я]).{8,}/)) {\n      this.passDescr.classList.remove('invalid');\n      this.passDescr.classList.add('valid');\n    } else {\n      this.passDescr.classList.remove('valid');\n      this.passDescr.classList.add('invalid');\n    }\n  };\n\n  checkSecondPass = (firstPass, secondPass) => {\n    if (firstPass === secondPass) {\n      this.secondPassDescr.classList.remove('invalid');\n      this.secondPassDescr.classList.add('valid');\n    } else {\n      this.secondPassDescr.classList.remove('valid');\n      this.secondPassDescr.classList.add('invalid');\n    }\n  };\n\n  checkOkBtn = () => {\n    if (\n      this.loginDescr.classList.contains('valid') &&\n      this.passDescr.classList.contains('valid') &&\n      this.secondPassDescr.classList.contains('valid')\n    ) {\n      this.okBtn.disabled = false;\n    } else {\n      this.okBtn.disabled = true;\n    }\n  };\n\n  handleChange(e, h_selector) {\n    switch (e.target.name) {\n      case 'logIn':\n        this.checkLogin(e.target.value);\n        break;\n      case 'password':\n        this.checkPass(e.target.value);\n        this.checkSecondPass(\n          this.passwordRepeatInput.value,\n          this.passInput.value,\n        );\n        break;\n      case 'passwordRepeat':\n        this.checkSecondPass(e.target.value, this.passInput.value);\n        break;\n      default:\n        break;\n    }\n    this.checkOkBtn();\n  }\n\n  handleOk(e) {\n    e.preventDefault();\n    alert('ТАДААААМ!');\n  }\n\n  show_hide_password({ target }) {\n    let input = document.querySelector(`.${target.name}`);\n\n    if (input.getAttribute('type') === 'password') {\n      target.classList.add('view');\n      input.setAttribute('type', 'text');\n    } else {\n      target.classList.remove('view');\n      input.setAttribute('type', 'password');\n    }\n  }\n\n  addListeners() {\n    this.okBtn.disabled = true;\n    this.logInInput.addEventListener('input', this.handleChange.bind(this));\n    this.passInput.addEventListener('input', this.handleChange.bind(this));\n    this.passwordRepeatInput.addEventListener(\n      'input',\n      this.handleChange.bind(this),\n    );\n    this.togglePassBth.forEach(btn =>\n      btn.addEventListener('click', this.show_hide_password),\n    );\n    this.okBtn.addEventListener('click', this.handleOk);\n  }\n}\n\nconst myForm = new Form('.modal__form');\nmyForm.addListeners();\n"],"sourceRoot":""}